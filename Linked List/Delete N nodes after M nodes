//APPROACH 1
Node *getListAfterDeleteOperation(Node *head, int n, int m)
{
	if(head == NULL || n == 0)
		return head;
	
	Node* curr = head;
	Node* prev = NULL;
	int travel = m;
	int remove = n;
	
	while(curr != NULL)
	{
		if(travel != 0)
		{
			travel--;
			prev = curr;
			curr = curr->next;
		}
		else
		{
			while(curr != NULL && remove != 0)
			{
				curr = curr->next;
				remove--;
				prev->next = curr;
			}
			travel = m;
			remove = n;
		}
	}

	return head;
}


//APPROACH 2
void linkdelete(struct Node  *head, int M, int N)
    {
        if(head == NULL)
            return;
            
        int count = 1;
        Node* curr = head;
        
        while(curr != NULL && curr->next != NULL)
        {
            if(count != M)
            {
                count++;
                curr = curr->next;
            }
            else
            {
                int temp = N;
                Node* forward = curr->next;
                while(temp != 0 && forward != NULL)
                {
                    temp--;
                    forward = forward->next;
                }
                curr->next = forward;
                curr = forward;
                count = 1;
            }
            
            
        }
        return;
    }
