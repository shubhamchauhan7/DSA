//Approach 1
bool isAnagram(string s, string t) 
    {
        if(s.length() != t.length())
            return false;

        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        
        for(int i = 0; i < s.length(); i++)
        {
            if(s[i] != t[i])
                return false;
        }    
        
        return true;
    }


//Approach 2
 bool isAnagram(string s, string t) 
    {
        if(s.length() != t.length())
            return false;

        unordered_map<char, int> seen;
        for(int i = 0 ; i < s.length(); i++)
            seen[s[i]]++;
        for(int i = 0; i < t.length(); i++)
            seen[t[i]]--;
        for(int i = 0; i < s.length(); i++)
        {
            if(seen[s[i]] != 0)
                return false;
        }
        return true;
    }
