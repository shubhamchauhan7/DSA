//Using PREDEFINED FUNCTION
int strStr(string haystack, string needle) 
    {
        int found = haystack.find(needle);
        if(found != string::npos)
            return found;
        return -1;  
    }


//Using SLIDING WINDOW APPROACH - 1
int strStr(string haystack, string needle) 
    {
        int n = haystack.length();
        int m = needle.length();
        for(i = 0; i <= n - m; i++)
        {
            for(j = 0; j < m; j++)
            {
                if(haystack[i + j] != needle[j])
                    break;
            }
            if(j == m)
                return i;
        }
        return -1;   
    }


//Using SLIDING WINDOW APPROACH - 2
int strStr(string haystack, string needle) 
    {
        for(int i = 0; i < haystack.length(); i++)
        {
            int j = 0;
            while(j < needle.length())
            {
                if(haystack[i + j] != needle[j])
                    break;
                j++;
            }
            if(j == needle.length())
                return i;
        }
        return -1;
    }
