//APPROACH 1 - Using extra space

void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) 
    {
        if(n == 0)
            return;
        
        vector<int> ans;
        int i = 0, j = 0;
        
        while(i < m && j < n)
        {
            if(nums1[i] < nums2[j])
            {
                ans.push_back(nums1[i]);
                i++;
            }
            else
            {
                ans.push_back(nums2[j]);
                j++;
            }
        }

        while(i < m)
        {
            ans.push_back(nums1[i]);
            i++;
        }

        while(j < n)
        {
            ans.push_back(nums2[j]);
            j++;
        }

        for(int index = 0; index < ans.size(); index++)
            nums1[index] = ans[index];
    }

//APPROACH 2 - No extra space

void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) 
    {
        int index1 = m - 1;
        int index2 = n - 1;
        int k = m + n - 1;

        while(index1 >= 0 && index2 >= 0)
        {
            if(nums1[index1] > nums2[index2])
            {
                nums1[k] = nums1[index1];
                index1--;
                k--;
            }
            else
            {
                nums1[k] = nums2[index2];
                index2--;
                k--;
            }
        }    

        while(index2 >= 0)
        {
            nums1[k] = nums2[index2];
            k--;
            index2--;
        }
    }
