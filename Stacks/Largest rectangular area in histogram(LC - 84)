vector<int> nextSmaller(vector<int> arr, int n)
    {
        stack<int> st;
        st.push(-1);
        vector<int> ans(n);

        for(int i = n - 1; i >= 0; i--)
        {
            while(st.top() != -1 && arr[st.top()] >= arr[i])
                st.pop();
            ans[i] = st.top();
            st.push(i);
        }
        return ans;
    }

    vector<int> previousSmaller(vector<int> arr, int n)
    {
        stack<int> st;
        st.push(-1);
        vector<int> ans(n);
        
        for(int i = 0; i < n; i++)
        {
            while(st.top() != -1 && arr[st.top()] >= arr[i])
                st.pop();
            ans[i] = st.top();
            st.push(i);
        }
        
        return ans;
    }


    int largestRectangleArea(vector<int>& heights) 
    {
        int size = heights.size();
        vector<int> prev = previousSmaller(heights, size);
        vector<int> next = nextSmaller(heights, size);
        int maxArea = INT_MIN;

        for(int i = 0 ; i < heights.size(); i++)
        {
            int length = heights[i];
            if(next[i] == -1)
                next[i] = size;
            int width = next[i] - prev[i] - 1;

            int area = length * width;
            maxArea = max(maxArea, area);
        }    

        return maxArea;
    }
