int occurence(vector<long long> v, long long x, bool occ)
{
        int start = 0;
        int end = v.size() - 1;
        int ans = -1;
        
    while(start <= end)
    {
            int mid = start + (end - start) / 2;
            if(v[mid] == x)
            {
                ans = mid;
                if(occ)
                    end = mid - 1;
                else
                    start = mid + 1;
            }
            else if(v[mid] < x)
                start = mid + 1;
            else
                end = mid - 1;
    }
    return ans;
}

pair<long,long> indexes(vector<long long> v, long long x)
{
        pair<long, long> p = make_pair(-1, -1);
        
        int ans1 = occurence(v, x, 1);        // 1 is used for first occurrence 
        int ans2 = occurence(v, x, 0);        // 0 is used for last occurrence
        p.first = ans1;
        p.second = ans2;
        return p;
}

// TC - O(logn)
